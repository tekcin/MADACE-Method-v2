name: E2E Tests with Strict TypeScript

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual trigger

env:
  NODE_VERSION: '20'
  PLAYWRIGHT_VERSION: '1.56.1'

jobs:
  # Job 1: Type Check E2E Tests
  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run E2E type check script
        run: ./scripts/e2e-type-check.sh --verbose
        continue-on-error: false

      - name: Type check E2E tests
        run: npx tsc --project e2e-tests/tsconfig.json --noEmit

      - name: Type check main codebase
        run: npm run type-check

  # Job 2: Lint E2E Tests
  lint:
    name: ESLint and Prettier
    runs-on: ubuntu-latest
    needs: type-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint "e2e-tests/**/*.ts" --max-warnings=0

      - name: Check formatting
        run: npx prettier --check "e2e-tests/**/*.ts"

  # Job 3: Run E2E Tests (Chrome)
  test-chrome:
    name: E2E Tests (Chromium)
    runs-on: ubuntu-latest
    needs: [type-check, lint]
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests (Chromium)
        run: npm run test:e2e:chromium
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-chrome
          path: playwright-report/
          retention-days: 30

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-chrome
          path: test-results/
          retention-days: 7

  # Job 4: Run E2E Tests (Firefox)
  test-firefox:
    name: E2E Tests (Firefox)
    runs-on: ubuntu-latest
    needs: [type-check, lint]
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install firefox --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests (Firefox)
        run: npx playwright test --project=firefox
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-firefox
          path: playwright-report/
          retention-days: 30

  # Job 5: Run E2E Tests (WebKit)
  test-webkit:
    name: E2E Tests (WebKit)
    runs-on: ubuntu-latest
    needs: [type-check, lint]
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install webkit --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests (WebKit)
        run: npx playwright test --project=webkit
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-webkit
          path: playwright-report/
          retention-days: 30

  # Job 6: Code Quality Report
  quality-report:
    name: Generate Quality Report
    runs-on: ubuntu-latest
    needs: [test-chrome, test-firefox, test-webkit]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Chrome results
        uses: actions/download-artifact@v4
        with:
          name: playwright-report-chrome
          path: reports/chrome/
        continue-on-error: true

      - name: Download Firefox results
        uses: actions/download-artifact@v4
        with:
          name: playwright-report-firefox
          path: reports/firefox/
        continue-on-error: true

      - name: Download WebKit results
        uses: actions/download-artifact@v4
        with:
          name: playwright-report-webkit
          path: reports/webkit/
        continue-on-error: true

      - name: Generate summary
        run: |
          echo "## E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Browser | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY

          if [ -d "reports/chrome" ]; then
            echo "| Chromium |  Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Chromium | L Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ -d "reports/firefox" ]; then
            echo "| Firefox |  Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Firefox | L Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          if [ -d "reports/webkit" ]; then
            echo "| WebKit |  Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| WebKit | L Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### TypeScript Strict Mode:  Enabled" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

  # Job 7: Notify on Failure
  notify-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [test-chrome, test-firefox, test-webkit]
    if: failure()

    steps:
      - name: Create Issue on Failure
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `E2E Tests Failed - ${context.sha.substring(0, 7)}`,
              body: `## E2E Test Failure\n\n**Workflow:** ${context.workflow}\n**Run:** ${context.runNumber}\n**Commit:** ${context.sha}\n\n[View Run](${context.payload.repository.html_url}/actions/runs/${context.runId})`,
              labels: ['bug', 'e2e-test-failure', 'automated']
            })
