# Caddy configuration for MADACE with automatic HTTPS
# Caddy automatically obtains and renews TLS certificates from Let's Encrypt

# Replace with your actual domain name
# Example: madace.yourdomain.com
{$DOMAIN:localhost} {
    # Enable automatic HTTPS
    # Caddy will automatically obtain certificates from Let's Encrypt

    # Reverse proxy to Next.js application
    reverse_proxy localhost:3000 {
        # Health check
        health_uri /
        health_interval 10s
        health_timeout 5s

        # Headers for proper forwarding
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
    }

    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

        # Prevent clickjacking
        X-Frame-Options "SAMEORIGIN"

        # XSS protection
        X-Content-Type-Options "nosniff"
        X-XSS-Protection "1; mode=block"

        # Referrer policy
        Referrer-Policy "strict-origin-when-cross-origin"

        # Content Security Policy (adjust as needed)
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://generativelanguage.googleapis.com https://api.anthropic.com https://api.openai.com"
    }

    # Logging
    log {
        output file /var/log/caddy/madace-access.log
        format json
    }

    # Enable compression
    encode gzip zstd

    # Rate limiting (optional)
    # rate_limit {
    #     zone madace {
    #         key {remote_host}
    #         events 100
    #         window 1m
    #     }
    # }
}

# HTTP to HTTPS redirect (automatic with Caddy)
# Caddy handles this automatically when a domain is specified
